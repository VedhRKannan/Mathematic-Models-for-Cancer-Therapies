begin parameters
  # Define the initial amounts of molecules
  Phosphate_0 10
  Tyrosine_0 50
  Histidine_0 30
  
  # Define reaction rate constants (you need to adjust these values)
  k_phosphorylation 0.1
#   k_dephosphorylation 0.05
end parameters

begin molecule types
  # Define the molecule types
  MoleculeType Phosphate()
  MoleculeType Tyrosine()
  MoleculeType Histidine()
  MoleculeType PhosphorylatedTyrosine()
  MoleculeType PhosprylatedHistidine()
end molecule types

begin seed species
  # Define the initial species with their amounts
  Phosphate(p) @ Phosphate_0
  Tyrosine(t) @ Tyrosine_0
  Histidine(h) @ Histidine_0
end seed species

begin observables
  # Define observables for tracking species over time (optional)
  Observable Phosphate(p)
  Observable Tyrosine(t)
  Observable Histidine(h)
  Observable PhosphorylatedTyrosine(pt)
  Observable PhosphorylatedHistidine(phi)
end observables

begin reaction rules
  # Define reaction rules
  # Phosphorylation of tyrosine
  Phosphate(p) + Tyrosine(t) -> PhosphorylatedTyrosine(pt) @ k_phosphorylation
  
  # Dephosphorylation of tyrosine (reverse reaction)
#   PhosphorylatedTyrosine(pt) -> Phosphate(p) + Tyrosine(t) @ k_dephosphorylation

  # Phosphorylation of Histidine

  Phosphate(p) + Histiidne(h) -> PhosphorylatedHistidine(phi) @ k_phosphorylation
end reaction rules

begin actions
  generate_network({overwrite=>1})
  simulate_ode({t_end=>100,n_steps=>100,atol=>1e-8,rtol=>1e-6})
  # Uncomment the following lines to simulate with high EGFR and low EGF levels:
#   resetConcentrations({EGFR=>EGFR_high})
#   resetConcentrations({EGF=>EGF_low})
  simulate_ode({t_end=>200,n_steps=>100,atol=>1e-8,rtol=>1e-6})
  # plot({title=>"EGFR Dimer Growth",xtitle=>"Time",ytitle=>"Concentration",file=>"EGFR_dimer_growth.pdf",legend_entries=>["EGFR monomer", "EGF", "EGFR dimer"]})
#   writeSimulationData({file=>"EGFR_dimer_growth.txt", format=>"CSV"})
    # writeSBML()
end actions
